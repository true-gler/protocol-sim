Protocol: Crowds
Algorithm: Dijkstra
Parameter:
pf 0.8
test asdf
-
0 Node
1 Node
2 Node
3 Node
4 Node
5 Node
6 Node
7 Node
8 Node
9 Node
10 Node
11 Node
12 Node
13 Node
14 Node
15 Node
16 Node
17 Node
18 Node
19 Node
20 Node
21 Node
22 Node
23 Node
24 Node
25 Node
26 Node
27 Node
28 FoeCrowdsCP
29 Node
30 Node
31 Node
32 Node
33 Node
34 Node
-
0 1 76
0 3 36
1 2 70
2 5 120
2 3 185
0 4 150
4 6 80
3 6 108
4 18 153
6 18 14
18 23 137
22 23 58
23 24 70
6 22 68
6 10 76
5 8 78
5 7 94
7 11 26
8 10 50
8 9 132
11 12 189 
11 13 82
12 13 78
13 14 86
10 11 94
14 15 177
15 16 35
13 16 198
14 17 199
10 17 44
9 10 108
16 17 111
16 21 148
17 20 48
20 21 175
21 26 76
20 26 96
20 29 143
26 29 152
20 34 178
20 25 142
25 34 144
33 34 27
26 33 150
25 28 3
28 33 181
22 24 8
19 22 93
24 27 136
27 31 50
30 31 75
30 32 197
31 32 148
28 31 95
24 28 91
24 25 85
19 25 88
9 19 181
9 20 20
# usage
# # this is a comment
# - sperator of sections
# The file must contain three sections
# 1. algorithm and parameters
# 2. nodes in the network (have to be named after the class)
# 3. connections between the nodes
#
# This is the section holds the used algorithm and the network parameters 
# used by the nodes for your protocol
#
# Protocol: <yourProtocol> (have to be an existing class in package, type sensitive)
# Algorithm: <yourAlgorithm> (have to be an existing class, type sensitive)
# Parameter:
# <your parameter>
# <the next parameter>
#
# the object in your network can be accessed with Network.getParameter
#